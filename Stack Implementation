
Stack stack = new Stack(5);
stack.Push(1);
stack.Push(2);
stack.Push(3);
stack.Push(4);
stack.DisplayAllElements();
stack.Pop();
stack.GetTopElement();
int n = 5;
stack.UpdateTopElement ( n);
stack.DisplayAllElements();
stack.Clear();
stack.DisplayAllElements();


class Stack
{
    private int[] stack;
    private int top;
    private int max;
    public Stack(int size)
    {
        stack = new int[size];
        top = -1;
        max = size;
    }
    public void Push(int item)
    {
        if (top == max - 1)
        {
            Console.WriteLine("Stack is full");
            return;
        }
        stack[++top] = item;
    }
    public void Pop()
    {
        if (isEmptye())
        {
            Console.WriteLine("Stack is empty");
            return;
        }
        Console.WriteLine("Item popped is " + stack[top--]);
    }
    public void DisplayAllElements()
    {
        if (isEmptye())
        {
            Console.WriteLine("\n"+
                "Stack is empty");
            return;
        }
        Console.Write("Stack is :{");
        for (int i = top; i >= 0; i--)
        {
            Console.Write(stack[i] + " ");
        }
        Console.Write("}");
    }

    public void GetTopElement()
    {
        if (isEmptye())
        {
            Console.WriteLine("Stack is empty");
            return;
        }

        Console.WriteLine($"Top element is {stack[top]}");
    }

    public void UpdateTopElement( int item)
    {
        if (isEmptye())
        {
            Console.WriteLine("Stack is empty");
            return;
        }
        stack[top] = item;
        

     }

    public void Clear()
    {
        if (isEmptye())
        {
            Console.WriteLine(" " +
                "Stack is empty");
            return;
        }

        top = -1;
    }






        bool isEmptye()
    {
        if (top == -1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}

